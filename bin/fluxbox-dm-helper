#!/bin/bash
#-- Helper script for partial desktop managers with fluxbox--
# Script by Phantom X <megaphantomx at bol.com.br>
#--
# Copyright 2008-2017 Phantom X, Goiania, Brazil.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Translations only work with utf8 locales
if [ ! $(echo ${LANG} | grep -i \\.utf8) ] && [ ! $(echo ${LANG} | grep -i \\.utf-8) ]; then
  LANG=C
fi

# For gettext internationalization
export TEXTDOMAIN="fluxbox-chinfo-menu"
export TEXTDOMAINDIR="/usr/share/locale"
if [ -x /usr/bin/gettext.sh ] ;then
  . /usr/bin/gettext.sh
else
  echo "Missing /usr/bin/gettext.sh"
  exit 1
fi

if [ -z "${DISPLAY}" ] ; then
  eval_gettext "This script needs a working display." ;echo || exit 1
fi

FDH_VERSION=@FCM_VERSION@
KDMCTLBIN=/usr/bin/kdmctl
GDMCTLBIN=/usr/bin/gdm-control
GDMFLEXIBIN=/usr/bin/gdmflexiserver
LIGHTDMBIN=/usr/bin/dm-tool
LXDMBIN=/usr/bin/lxdm
KDIALOGBIN=/usr/bin/kdialog
ZENITYBIN=/usr/bin/zenity
XMESSAGEBIN=/usr/bin/xmessage
XTERMBIN=/usr/bin/xterm
SHUTCOM=/sbin/shutdown
GKSUBIN=/usr/bin/gksu
KDESUBIN=/usr/bin/kdesu
LXSUBIN=/usr/bin/lxqt-sudo
LOGINCTL=/bin/loginctl
SYSTEMCTL=/bin/systemctl

unset FLUXEXIT

fdhcommand="$0"

txt() {
eval_gettext 'Usage : ${fdhcommand} <option>
Script to control GDM/KDM in menus.

<option> can be:
  f|-f|--fluxbox     Exits fluxbox after some options.
  n|-n|--new         Open a reserved display
  r|-r|--reboot      Reboot
  s|-s|--shutdown    Shutdown
  h|-h|--help        This message
  v|-v|--version     Output version

Reboot/Shutdown options execute xterm with su, if no gdm/kdm found.'
echo
}

errortxt() {
  XTERMBASE="$(basename ${XTERMBIN})"
  EMSG="$(eval_gettext 'GDM/KDM/Lightdm/LXDM/${XTERMBASE} is not properly installed.')"
  if [ "${KDE_FULL_SESSION}" = "true" ] && [ -x "${KDIALOGBIN}" ] ; then
    "${KDIALOGBIN}" --sorry "${ETEXT}"
  elif [ -x "${ZENITYBIN}" ] ;then
    "${ZENITYBIN}" --info --text="${ETEXT}"
  elif [ -x "${XMESSAGEBIN}" ] ;then
    "${XMESSAGEBIN}" -default okay -center "${ETEXT}"
  else
    echo "${EMSG}"
  fi
  exit 1
}

rebootopt() {
  REBOOTMSG="$(eval_gettext 'Insert root password to reboot:')"
  if [ -x "${KDMCTLBIN}" ] && [ "$(kdmctl caps | grep ok)" ] && [ "$(kdmctl caps | grep 'shutdown ask')" ] ;then
    "${KDMCTLBIN}" shutdown reboot ask &>/dev/null
    [ "${FLUXEXIT}" = "1" ] && fluxbox-remote exit
  elif pgrep -f ^/usr/bin/gdm &>/dev/null && [ -x "${GDMCTLBIN}" ] ;then
    "${GDMCTLBIN}" --reboot &>/dev/null
    [ "${FLUXEXIT}" = "1" ] && fluxbox-remote exit
  elif "${LOGINCTL}" show-user "${USER}" &>/dev/null ;then
    "${SYSTEMCTL}" reboot &>/dev/null
  elif [ "${KDE_FULL_SESSION}" = "true" ] && [ -x "${KDESUBIN}" ] ; then
    "${KDESUBIN}" "${SHUTCOM} -t 5 -r now"
  elif [ -x "${LXSUBIN}" ] ;then
    "${LXSUBIN}" -s "${SHUTCOM} -t 5 -r now"
  elif [ -x "${GKSUBIN}" ] ;then
    "${GKSUBIN}" -m "${REBOOTMSG}" "${SHUTCOM} -t 5 -r now"
  elif [ -x "${XTERMBIN}" ] ;then
    "${XTERMBIN}" -geometry 50x2 -e "echo \"${REBOOTMSG}\" && su -c \"${SHUTCOM} -t 5 -r now\""
  else
    errortxt
  fi
}

haltopt() {
  HALTMSG="$(eval_gettext 'Insert root password to shutdown:')"
  if [ -x "${KDMCTLBIN}" ] && [ "$(kdmctl caps | grep ok)" ] && [ "$(kdmctl caps | grep 'shutdown ask')" ] ;then
    "${KDMCTLBIN}" shutdown halt ask &>/dev/null 
    [ "${FLUXEXIT}" = "1" ] && fluxbox-remote exit
  elif pgrep -f ^/usr/bin/gdm &>/dev/null && [ -x "${GDMCTLBIN}" ] ;then
    "${GDMCTLBIN}" --shutdown &>/dev/null
    [ "${FLUXEXIT}" = "1" ] && fluxbox-remote exit
  elif "${LOGINCTL}" show-user "${USER}" &>/dev/null ;then
    "${SYSTEMCTL}" poweroff &>/dev/null
  elif [ "${KDE_FULL_SESSION}" = "true" ] && [ -x "${KDESUBIN}" ] ; then
    "${KDESUBIN}" "${SHUTCOM} -t 5 -h now"
  elif [ -x "${LXSUBIN}" ] ;then
    "${LXSUBIN}" -s "${SHUTCOM} -t 5 -r now"
  elif [ -x "${GKSUBIN}" ] ;then
    "${GKSUBIN}" -m "${HALTMSG}" "${SHUTCOM} -t 5 -h now"
  elif [ -x "${XTERMBIN}" ] ;then
    "${XTERMBIN}" -geometry 50x2 -e "echo \"${HALTMSG}\" && su -c \"${SHUTCOM} -t 5 -h now\""
  else
    errortxt
  fi
}

reserveopt() {
  RESMSG="$(eval_gettext 'GDM/KDM do not running or do not have reserved displays configured.')"
  if [ "$(kdmctl caps | grep ok)" ] ;then
    "${KDMCTLBIN}" reserve &>/dev/null
  elif pgrep -f ^/usr/bin/lightdm &>/dev/null && [ -x "${LIGHTDMBIN}" ] ;then
    "${LIGHTDMBIN}" switch-to-greeter &>/dev/null
  elif pgrep -f ^"${LXDMBIN}" &>/dev/null && [ -x "${LXDMBIN}" ] ;then
    "${LXDMBIN}" -c USER_SWITCH &>/dev/null
  elif pgrep -f ^/usr/bin/gdm &>/dev/null && [ -x "${GDMFLEXIBIN}" ] ;then
    "${GDMFLEXIBIN}" -s &>/dev/null
  elif [ "${KDE_FULL_SESSION}" = "true" ] && [ -x "${KDIALOGBIN}" ] ; then
    "${KDIALOGBIN}" --sorry "${RESTEXT}"
  elif [ -x "${ZENITYBIN}" ] ;then
    "${ZENITYBIN}" --info --text="${RESTEXT}"
  elif [ -x "${XMESSAGEBIN}" ] ;then
    "${XMESSAGEBIN}" -default okay -center "${RESTEXT}"
  else
    echo "${RESMSG}"
  fi
}

case "$1" in
  v|-v|--version)
    echo ${FDH_VERSION}
    exit 0
    ;;
esac

while [ -n "$1" ] ;do
  case "$1" in
    f|-f|--fluxbox)
      FLUXEXIT=1
      ;;
    n|-n|--new)
      reserveopt
      ;;
    r|-r|--reboot)
      rebootopt
      ;;
    s|-s|--shutdown)
      haltopt
      ;;
    h|-h|--help|*)
      txt
      ;;
  esac
  shift
done
